{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WouaMatrimony \u00b6 WouaMatrimony Multiplatform project using Jetpack Compose and SwiftUI. Currently running on Android (Jetpack Compose) iOS (SwiftUI) Desktop (Compose for Desktop) Web (Kotlin/JS + React Wrapper) JVM Setup \u00b6 Android IOS JavaScript-Dealer JavaScript-User Jetpack Compose for Desktop client \u00b6 This client is available in compose-desktop module. Note that you currently need to use EAP version of kotlin plugin and also use appropriate JVM when running (works for example with Java 11) Languages, libraries and tools used \u00b6 Kotlin Kotlin Coroutines Kotlinx Serialization Ktor client library Android Architecture Components Koin Jetpack Compose SwiftUI","title":"Getting Started"},{"location":"#wouamatrimony","text":"WouaMatrimony Multiplatform project using Jetpack Compose and SwiftUI. Currently running on Android (Jetpack Compose) iOS (SwiftUI) Desktop (Compose for Desktop) Web (Kotlin/JS + React Wrapper) JVM","title":"WouaMatrimony"},{"location":"#setup","text":"Android IOS JavaScript-Dealer JavaScript-User","title":"Setup"},{"location":"#jetpack-compose-for-desktop-client","text":"This client is available in compose-desktop module. Note that you currently need to use EAP version of kotlin plugin and also use appropriate JVM when running (works for example with Java 11)","title":"Jetpack Compose for Desktop client"},{"location":"#languages-libraries-and-tools-used","text":"Kotlin Kotlin Coroutines Kotlinx Serialization Ktor client library Android Architecture Components Koin Jetpack Compose SwiftUI","title":"Languages, libraries and tools used"},{"location":"changelog/","text":"ChangeLog \u00b6","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"ChangeLog"},{"location":"code_of_conduct/","text":"CodeOfContent \u00b6","title":"Code of Conduct"},{"location":"code_of_conduct/#codeofcontent","text":"","title":"CodeOfContent"},{"location":"about/history/","text":"1.0.0 (2017.11.01) \u00b6 Initial release","title":"Release notes"},{"location":"about/history/#100-20171101","text":"Initial release","title":"1.0.0 (2017.11.01)"},{"location":"getting/android/","text":"Getting Started \u00b6","title":"Android"},{"location":"getting/android/#getting-started","text":"","title":"Getting Started"},{"location":"getting/ios/","text":"Getting Started \u00b6 WouaMatrimonyIOS \u00b6 This repo to have matrimony iOS app along with SDK integrated Steps for Framework Export \u00b6 In android studio build the task named woua-matrimonysdk ->multiplatform swift package -> create swift xcframework The framework was generated in swift package -> WouaMatrimonyKmp.xcframework->ios-x86_64 ->Wouamatrimonysdk.framework Open this framework location in finder and drag and drop the framework to your xcode application.(note:Open the project in xcode not in the finder) 4. 5. On the stage of drag and drop one dialog window will open in xcode,check the box copy items if needed, then select ok 6. In xcode -> select your project from left window and select target in right window In General tab ->Frameworks,Libraries and Embedded content -> here that will show the added frameworks on that select your framework -> choose \"Embed and sign\" Build your xcode project and you are ready to use the functions in the framework Note: \u00b6 Sometimes it will produce an error like \"The linked framework 'yourframeworkname.framework'is missing one or more architectures required by this target: arm64\" to resolve this error,follow the below steps 1.In project target window select the target tab ->Build settings ->Excluded architecture ->Debug ->Select any ios simulator sdk -> arm64 2.Exclude architecture -> Release ->Select any ios simulator sdk -> arm64 3.Build settings ->Build options -> validate workspace ->change the value to YES default value will be No Steps For Adding framework from pods \u00b6 1.In android studio buld the task -> cocoapods -> podspec, then podspec will be generated for the sdk. 2. Create a xcode project and open the location in finder. 3. Open a new terminal at this project location and run the command pod init, podfile will be generated in your project location 4. open the pod file and type the location of the podspec in the pod file For eg: target 'WouaMatrimony' do pod 'woua_matrimony_sdk', :path => '../woua-matrimony-sdk' end In this 'woua_matrimony_sdk' will be the generated framework name and 'path' will be the location of pod spec generated module 5.In the above opened terminal run the command pod install (note:pod will be successfully installed if the podspec location was correct) If there is any error as mentioned in above note please add excluded architecture,validate workspace for both project and pods","title":"Ios"},{"location":"getting/ios/#getting-started","text":"","title":"Getting Started"},{"location":"getting/ios/#wouamatrimonyios","text":"This repo to have matrimony iOS app along with SDK integrated","title":"WouaMatrimonyIOS"},{"location":"getting/ios/#steps-for-framework-export","text":"In android studio build the task named woua-matrimonysdk ->multiplatform swift package -> create swift xcframework The framework was generated in swift package -> WouaMatrimonyKmp.xcframework->ios-x86_64 ->Wouamatrimonysdk.framework Open this framework location in finder and drag and drop the framework to your xcode application.(note:Open the project in xcode not in the finder) 4. 5. On the stage of drag and drop one dialog window will open in xcode,check the box copy items if needed, then select ok 6. In xcode -> select your project from left window and select target in right window In General tab ->Frameworks,Libraries and Embedded content -> here that will show the added frameworks on that select your framework -> choose \"Embed and sign\" Build your xcode project and you are ready to use the functions in the framework","title":"Steps for Framework Export"},{"location":"getting/ios/#note","text":"Sometimes it will produce an error like \"The linked framework 'yourframeworkname.framework'is missing one or more architectures required by this target: arm64\" to resolve this error,follow the below steps 1.In project target window select the target tab ->Build settings ->Excluded architecture ->Debug ->Select any ios simulator sdk -> arm64 2.Exclude architecture -> Release ->Select any ios simulator sdk -> arm64 3.Build settings ->Build options -> validate workspace ->change the value to YES default value will be No","title":"Note:"},{"location":"getting/ios/#steps-for-adding-framework-from-pods","text":"1.In android studio buld the task -> cocoapods -> podspec, then podspec will be generated for the sdk. 2. Create a xcode project and open the location in finder. 3. Open a new terminal at this project location and run the command pod init, podfile will be generated in your project location 4. open the pod file and type the location of the podspec in the pod file For eg: target 'WouaMatrimony' do pod 'woua_matrimony_sdk', :path => '../woua-matrimony-sdk' end In this 'woua_matrimony_sdk' will be the generated framework name and 'path' will be the location of pod spec generated module 5.In the above opened terminal run the command pod install (note:pod will be successfully installed if the podspec location was correct) If there is any error as mentioned in above note please add excluded architecture,validate workspace for both project and pods","title":"Steps For Adding framework from pods"},{"location":"getting/js/","text":"Getting Started \u00b6","title":"Javascript"},{"location":"getting/js/#getting-started","text":"","title":"Getting Started"},{"location":"sdkApi/lookup/","text":"Lookup Data \u00b6 Fetch lookup \u00b6 Kotlin WouaMatrimonySDK . lookup (). fetchLookUp ( arrayOf ( LookupType . DEALER_LIST , LookupType . COUNTRY ) ) Swift sdk . lookUp (). fetchLookUp ( lookupType : streets , callback :{ ( result : LookUpRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Fetch locality \u00b6 Kotlin WouaMatrimonySDK . lookup (). fetchLocality ( LocalityType . STATE , 1 ) Swift sdk . lookUp (). fetchLocality ( localityType : LocalityType . state , id : 1 ) { ( result : LookUpRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Lookup Data"},{"location":"sdkApi/lookup/#lookup-data","text":"","title":"Lookup Data"},{"location":"sdkApi/lookup/#fetch-lookup","text":"Kotlin WouaMatrimonySDK . lookup (). fetchLookUp ( arrayOf ( LookupType . DEALER_LIST , LookupType . COUNTRY ) ) Swift sdk . lookUp (). fetchLookUp ( lookupType : streets , callback :{ ( result : LookUpRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Fetch lookup"},{"location":"sdkApi/lookup/#fetch-locality","text":"Kotlin WouaMatrimonySDK . lookup (). fetchLocality ( LocalityType . STATE , 1 ) Swift sdk . lookUp (). fetchLocality ( localityType : LocalityType . state , id : 1 ) { ( result : LookUpRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Fetch locality"},{"location":"sdkApi/notification/","text":"Notification \u00b6 Notification View \u00b6 Kotlin WouaMatrimonySDK . notification (). notificationView ( 1 , 10 )) Swift sdk . notification (). viewNotification ( page : 1 , size : 10 ) { ( result : NotificationRecord_ ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Notification"},{"location":"sdkApi/notification/#notification","text":"","title":"Notification"},{"location":"sdkApi/notification/#notification-view","text":"Kotlin WouaMatrimonySDK . notification (). notificationView ( 1 , 10 )) Swift sdk . notification (). viewNotification ( page : 1 , size : 10 ) { ( result : NotificationRecord_ ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Notification View"},{"location":"sdkApi/plan/","text":"Plan \u00b6 Get plans \u00b6 Kotlin WouaMatrimonySDK . plan (). getPlans ()) Swift sdk . plan (). getPlans { ( result : PlanRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Request to upgrade plan \u00b6 Kotlin WouaMatrimonySDK . plan (). requestToUpgradePlan ( 38 , PlanState . UPGRADE . value )) Swift sdk . plan (). upgradePlan ( planId : 1 , planState : \"plan state\" , callback :{ ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Plan"},{"location":"sdkApi/plan/#plan","text":"","title":"Plan"},{"location":"sdkApi/plan/#get-plans","text":"Kotlin WouaMatrimonySDK . plan (). getPlans ()) Swift sdk . plan (). getPlans { ( result : PlanRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Get plans"},{"location":"sdkApi/plan/#request-to-upgrade-plan","text":"Kotlin WouaMatrimonySDK . plan (). requestToUpgradePlan ( 38 , PlanState . UPGRADE . value )) Swift sdk . plan (). upgradePlan ( planId : 1 , planState : \"plan state\" , callback :{ ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Request to upgrade plan"},{"location":"sdkApi/userAccess/","text":"UserAccess \u00b6 Collection view \u00b6 Kotlin WouaMatrimonySDK . user (). collectionView ()) Swift sdk . user (). collectionView { ( result : CollectionRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } View profile \u00b6 Kotlin WouaMatrimonySDK . user (). getUserProfile () Swift sdk . user (). getUserProfile { ( result : UserRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } View other profile \u00b6 Kotlin WouaMatrimonySDK . user (). getUserProfile ( userKey ) Swift sdk . user (). getUserProfile ( userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" , callback :{ ( result : UserRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Action api \u00b6 Profile view Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . PROFILE_VIEW , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . profileView , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Horoscope Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . HOROSCOPE_DOWNLOAD , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . horoscopeDownload , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Contact view Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . CONTACT_VIEW , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . contactView , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } ShortlistPLP (profile Listing api) Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . SHORTLIST , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . shortlist , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Filter profile \u00b6 Kotlin WouaMatrimonySDK . user (). filterUserProfile ( filterDetails , page , size )) Swift sdk . user (). getUserProfiles ( subId : 2 , page : 3 , size : 4 , discoverType : DiscoverType . none , callback : { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Search profile \u00b6 Kotlin WouaMatrimonySDK . user () . searchUserProfile ( SearchType . REGISTRATION_ID , search , page , size )) Swift sdk . user (). searchUserProfile ( name : \"customer5y69612@woualabs.com\" , page : 1 , size : 10 , callback : { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Report profile \u00b6 Kotlin WouaMatrimonySDK . user (). reportUserProfile ( report , userKey )) Swift sdk . user (). reportUserProfile ( report : \"It is fake\" , userKey : \"ck9a3d7fc9Aa430A436cAbb5eAe679e3561ac2\" , callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) User Activity \u00b6 User Kotlin WouaMatrimonySDK . user () . userActivity ( ActionType . HOROSCOPE_DOWNLOAD , ActivityType . USER )) Swift sdk . user (). userActivity ( actionType : ActionType . contactView , activityType : ActivityType . user ) { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Other user Kotlin WouaMatrimonySDK . user () . userActivity ( ActionType . HOROSCOPE_DOWNLOAD , ActivityType . OTHER_USER )) Swift sdk . user (). userActivity ( actionType : ActionType . contactView , activityType : ActivityType . otherUser ) { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Change app language \u00b6 Kotlin WouaMatrimonySDK . user (). changeLanguage ( \"ta\" )) Swift sdk . user (). changeLanguage ( appLanguageId : \"en\" , callback :{ ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Fetch app language \u00b6 Kotlin WouaMatrimonySDK . user (). fetchAppLanguageId () Swift sdk . user (). fetchLanguage { ( result : String ?) in if let result = result { print ( result ) } }","title":"User Access"},{"location":"sdkApi/userAccess/#useraccess","text":"","title":"UserAccess"},{"location":"sdkApi/userAccess/#collection-view","text":"Kotlin WouaMatrimonySDK . user (). collectionView ()) Swift sdk . user (). collectionView { ( result : CollectionRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Collection view"},{"location":"sdkApi/userAccess/#view-profile","text":"Kotlin WouaMatrimonySDK . user (). getUserProfile () Swift sdk . user (). getUserProfile { ( result : UserRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"View profile"},{"location":"sdkApi/userAccess/#view-other-profile","text":"Kotlin WouaMatrimonySDK . user (). getUserProfile ( userKey ) Swift sdk . user (). getUserProfile ( userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" , callback :{ ( result : UserRecord ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"View other profile"},{"location":"sdkApi/userAccess/#action-api","text":"Profile view Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . PROFILE_VIEW , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . profileView , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Horoscope Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . HOROSCOPE_DOWNLOAD , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . horoscopeDownload , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Contact view Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . CONTACT_VIEW , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . contactView , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } ShortlistPLP (profile Listing api) Kotlin WouaMatrimonySDK . user () . userAction ( ActionType . SHORTLIST , \"ck088103e9A6059A46c8Ab4baA636fe580d192\" ) Swift sdk . user (). userAction ( actionType : ActionType . shortlist , userKey : \"ck00b65d8dA32e2A4e48A9d28Acd516eb0d423\" ) { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"Action api"},{"location":"sdkApi/userAccess/#filter-profile","text":"Kotlin WouaMatrimonySDK . user (). filterUserProfile ( filterDetails , page , size )) Swift sdk . user (). getUserProfiles ( subId : 2 , page : 3 , size : 4 , discoverType : DiscoverType . none , callback : { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Filter profile"},{"location":"sdkApi/userAccess/#search-profile","text":"Kotlin WouaMatrimonySDK . user () . searchUserProfile ( SearchType . REGISTRATION_ID , search , page , size )) Swift sdk . user (). searchUserProfile ( name : \"customer5y69612@woualabs.com\" , page : 1 , size : 10 , callback : { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Search profile"},{"location":"sdkApi/userAccess/#report-profile","text":"Kotlin WouaMatrimonySDK . user (). reportUserProfile ( report , userKey )) Swift sdk . user (). reportUserProfile ( report : \"It is fake\" , userKey : \"ck9a3d7fc9Aa430A436cAbb5eAe679e3561ac2\" , callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Report profile"},{"location":"sdkApi/userAccess/#user-activity","text":"User Kotlin WouaMatrimonySDK . user () . userActivity ( ActionType . HOROSCOPE_DOWNLOAD , ActivityType . USER )) Swift sdk . user (). userActivity ( actionType : ActionType . contactView , activityType : ActivityType . user ) { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } } Other user Kotlin WouaMatrimonySDK . user () . userActivity ( ActionType . HOROSCOPE_DOWNLOAD , ActivityType . OTHER_USER )) Swift sdk . user (). userActivity ( actionType : ActionType . contactView , activityType : ActivityType . otherUser ) { ( result :[ UserRecord ]?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } }","title":"User Activity"},{"location":"sdkApi/userAccess/#change-app-language","text":"Kotlin WouaMatrimonySDK . user (). changeLanguage ( \"ta\" )) Swift sdk . user (). changeLanguage ( appLanguageId : \"en\" , callback :{ ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result ) } else if let error = error { print ( error . code ) print ( error . message ) } })","title":"Change app language"},{"location":"sdkApi/userAccess/#fetch-app-language","text":"Kotlin WouaMatrimonySDK . user (). fetchAppLanguageId () Swift sdk . user (). fetchLanguage { ( result : String ?) in if let result = result { print ( result ) } }","title":"Fetch app language"},{"location":"sdkApi/userOnboard/","text":"UserOnBoard \u00b6 Sign Up \u00b6 Kotlin WouaMatrimonySDK . onboard () ?. signUp ( AccountDetails ( fullName = fullname1 , email = email , mobile = mobile , addressLine1 = addressLine , dateOfBirth = dateOfBirth , cityId = cityId , stateId = stateId , countryId = countryId , dealerKey = key , pincode = \"613001\" ) ) Swift sdk . onboard (). signUp ( accountDetails :. init ( fullName : \"Arun Sundar1234\" , email : \"my1@email.com\" , mobile : 9973982786 , dateOfBirth : \"02-07-1990\" , addressLine1 : \"woulabs software, Thanjavur\" , cityId : 2 , stateId : 1 , countryId : 1 , dealerKey : \"dked9d154fSef98S4cf9S9750S7f95ddb758ba\" , pincode : \"613002\" ), callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) print ( result . isSuccess ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript Login \u00b6 Kotlin WouaMatrimonySDK . onboard () ?. login ( AccountDetails ( username , password ) ) Swift sdk . onboard (). login ( accountDetails :. init ( customerRegId : \"R10089\" , password : \"admin\" ), callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) print ( result . isSuccess ) //sdk.onboard().dispose() DispatchQueue . main . async () { NSLog ( \"Swift login: \\( sdk . onboard () . countActiveMainScopeJobs ()) \" ) } } else if let error = error { DispatchQueue . main . async () { NSLog ( \"Swift login error : \\( sdk . onboard () . countActiveMainScopeJobs ()) \" ) } print ( error . code ) print ( error . message ) //sdk.onboard().dispose() } }) Javascript Change Password \u00b6 Kotlin WouaMatrimonySDK . onboard () ?. changePassword ( currentPassword , newPassword ) Swift sdk . onboard (). changePassword ( password : \"admin2\" , newPassword : \"admin3\" , callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript Logout \u00b6 Kotlin WouaMatrimonySDK . onboard () ?. logout ()) Swift sdk . onboard (). logout ( callback : {( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript","title":"User OnBoard"},{"location":"sdkApi/userOnboard/#useronboard","text":"","title":"UserOnBoard"},{"location":"sdkApi/userOnboard/#sign-up","text":"Kotlin WouaMatrimonySDK . onboard () ?. signUp ( AccountDetails ( fullName = fullname1 , email = email , mobile = mobile , addressLine1 = addressLine , dateOfBirth = dateOfBirth , cityId = cityId , stateId = stateId , countryId = countryId , dealerKey = key , pincode = \"613001\" ) ) Swift sdk . onboard (). signUp ( accountDetails :. init ( fullName : \"Arun Sundar1234\" , email : \"my1@email.com\" , mobile : 9973982786 , dateOfBirth : \"02-07-1990\" , addressLine1 : \"woulabs software, Thanjavur\" , cityId : 2 , stateId : 1 , countryId : 1 , dealerKey : \"dked9d154fSef98S4cf9S9750S7f95ddb758ba\" , pincode : \"613002\" ), callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) print ( result . isSuccess ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript","title":"Sign Up"},{"location":"sdkApi/userOnboard/#login","text":"Kotlin WouaMatrimonySDK . onboard () ?. login ( AccountDetails ( username , password ) ) Swift sdk . onboard (). login ( accountDetails :. init ( customerRegId : \"R10089\" , password : \"admin\" ), callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) print ( result . isSuccess ) //sdk.onboard().dispose() DispatchQueue . main . async () { NSLog ( \"Swift login: \\( sdk . onboard () . countActiveMainScopeJobs ()) \" ) } } else if let error = error { DispatchQueue . main . async () { NSLog ( \"Swift login error : \\( sdk . onboard () . countActiveMainScopeJobs ()) \" ) } print ( error . code ) print ( error . message ) //sdk.onboard().dispose() } }) Javascript","title":"Login"},{"location":"sdkApi/userOnboard/#change-password","text":"Kotlin WouaMatrimonySDK . onboard () ?. changePassword ( currentPassword , newPassword ) Swift sdk . onboard (). changePassword ( password : \"admin2\" , newPassword : \"admin3\" , callback : { ( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript","title":"Change Password"},{"location":"sdkApi/userOnboard/#logout","text":"Kotlin WouaMatrimonySDK . onboard () ?. logout ()) Swift sdk . onboard (). logout ( callback : {( result : Result ?, error : WouaSDKException ?) in if let result = result { print ( result . message ) } else if let error = error { print ( error . code ) print ( error . message ) } }) Javascript","title":"Logout"}]}